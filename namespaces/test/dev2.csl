#if 1 // old stuff 
C Compiler Logic User

: caseSwitchExample ( n ) 
    nl
    { 1 p } 1 case
    { 2 p } 2 case
    { 3 p } 3 case
    n @ switch
;
2 caseSwitchExample 
Compiler
: attx 8 4 stk / p ;
' attx wdiss
attx

: attx3 8 4 * 16 / 2 + 3 - dup p ;
' attx3 wdiss
attx3 1 == { nl "math optimization ok" ps nl } if1

: attx2 ( n m ) 
    nl "m = " ps m @ p 
    nl "n = " ps n @ p nl
    m @ n @ / dup p
    m @ * dup p
    n @ + dup p
    m @ * dup p
    n @ - dup p
    nl p 
;

' attx2 wdiss
8 4 attx2

: attx5 ( n m )
    m n / 
    m * 
    n + 
    m * 
    n - 
    2 *
    4 /
    3 + 
    8 -
    nl p 
;

' attx5 wdiss
8 4 attx5

: attx6 ( n m )
    m n / 
    m * 
    n + 
    m - 
    2 / 
    2 *
    2 -
    2 + 
    nl p 
;

' attx6 wdiss
2 2 attx6

: hi 1 2 + p ; inline
: hey hi hi hi ; inline 
: heey hey hey ;
' heey wdiss
// test for 
/*
    case ( OP_VAR << ( 2 * O_BITS ) | OP_FETCH << ( 1 * O_BITS ) | OP_UNORDERED ):
    case ( OP_VAR << ( 2 * O_BITS ) | OP_FETCH << ( 1 * O_BITS ) | OP_ORDERED ):
    case ( OP_VAR << ( 2 * O_BITS ) | OP_FETCH << ( 1 * O_BITS ) | OP_LOGIC ):
*/
{ (| n ) 1 n 1 = n @ + p } iax 
{ (| n ) 1 n 1 = n @ - p } iax
{ (| n ) 1 n 1 = n + p } iax 
{ (| n ) 1 n 1 = n - p } iax
#endif
: atx (| n ) n 1 = n 3 <<= n @ p ; ' atx find wdiss atx 
: atx (| n ) n 1 = n 1 <<= n @ p ; ' atx find wdiss atx 
: atx (| n ) n 1 = n 5 <<= n @ 3 >> p ; ' atx find wdiss d: atx 
d: s
